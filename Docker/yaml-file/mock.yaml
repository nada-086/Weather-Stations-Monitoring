apiVersion: v1
kind: Service
metadata:
  name: kafka-zookeeper
spec:
  ports:
    - port: 2181
  selector:
    app: kafka
    release: kafka

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka-zookeeper
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      release: kafka
  template:
    metadata:
      labels:
        app: kafka
        release: kafka
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: kafka
          image: bitnami/kafka:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka:9092
            - name: KAFKA_LISTENERS
              value: PLAINTEXT://0.0.0.0:9092
          ports:
            - containerPort: 9092
              name: kafka
          volumeMounts:
            - name: data
              mountPath: /bitnami/kafka

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: parquet-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/home/data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: parquet-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  ports:
    - protocol: TCP
      port: 9092
  selector:
    app: kafka
    release: kafka

---
apiVersion: v1
kind: Service
metadata:
  name: central-station
spec:
  selector:
    app: central-station
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-station
spec:
  replicas: 10
  selector:
    matchLabels:
      app: weather-station
  template:
    metadata:
      labels:
        app: weather-station
    spec:
      containers:
        - name: weather-station
          image: weather-station:latest
          imagePullPolicy: Never
          env:
            - name: KAFKA_BROKER_URL
              value: "kafka:9092"
            - name: BITCASK_DIRECTORY
              value: "/data/bitcask"
            - name: PARQUET_OUTPUT_PATH
              value: "/data/parquet"
          volumeMounts:
            - mountPath: /data
              name: weather-station-pvc
      volumes:
        - name: weather-station-pvc
          persistentVolumeClaim:
            claimName: parquet-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: weather-station-service
spec:
  selector:
    app: weather-station
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: es-indexer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: es-indexer
  template:
    metadata:
      labels:
        app: es-indexer
    spec:
      containers:
        - name: es-indexer
          image: es-indexer:latest
          imagePullPolicy: Never
          env:
            - name: ELASTICSEARCH_HOST
              value: "elasticsearch"
            - name: ELASTICSEARCH_PORT
              value: "9200"
            - name: PARQUET_DIRECTORY
              value: "/mnt/parquet"
          volumeMounts:
            - mountPath: /mnt/parquet
              name: parquet-files
      volumes:
        - name: parquet-files
          persistentVolumeClaim:
            claimName: parquet-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
spec:
  selector:
    app: elasticsearch
  ports:
    - protocol: TCP
      port: 9200
      targetPort: 9200

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: nshou/elasticsearch-kibana:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 9200
          env:
            - name: discovery.type
              value: single-node
